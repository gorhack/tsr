-- baseline
drop table if exists flyway_schema_history cascade;
drop table if exists spring_session_attributes cascade;
drop table if exists spring_session cascade;
drop table if exists tsr_user_organization cascade;
drop table if exists event_task_category cascade;
drop table if exists event_organization cascade;
drop table if exists organization cascade;
drop table if exists event_task_comment cascade;
drop table if exists event_task cascade;
drop table if exists tsr_user cascade;
drop table if exists event cascade;
drop table if exists event_type cascade;
drop table if exists event_task_status cascade;

drop sequence if exists event_type_event_type_id_seq cascade;
drop sequence if exists event_event_id_seq cascade;
drop sequence if exists organization_organization_id_seq cascade;
drop sequence if exists event_task_status_status_id_seq cascade;
drop sequence if exists event_task_event_task_id_seq cascade;
drop sequence if exists event_task_comment_comment_id_seq cascade;
drop sequence if exists tsr_user_id_seq cascade;
drop sequence if exists event_task_category_event_task_category_id_seq cascade;

create table flyway_schema_history
(
    installed_rank integer                 not null
        constraint flyway_schema_history_pk
            primary key,
    version        varchar(50),
    description    varchar(200)            not null,
    type           varchar(20)             not null,
    script         varchar(1000)           not null,
    checksum       integer,
    installed_by   varchar(100)            not null,
    installed_on   timestamp default now() not null,
    execution_time integer                 not null,
    success        boolean                 not null
);

alter table flyway_schema_history
    owner to tsr;

create index flyway_schema_history_s_idx
    on flyway_schema_history (success);

create table tsr_user
(
    tsr_user_id            bigint generated by default as identity
        constraint tsr_user_id_pkey
            primary key,
    user_id       varchar(255) not null
        constraint tsr_user_user_id_key
            unique,
    username      varchar(255) default NULL::character varying,
    role          varchar(100) not null,
    phone_number  varchar(32),
    email_address varchar(254)
);

alter table tsr_user
    owner to tsr;

create table spring_session
(
    primary_id            char(36) not null
        constraint spring_session_pk
            primary key,
    session_id            char(36) not null,
    creation_time         bigint   not null,
    last_access_time      bigint   not null,
    max_inactive_interval integer  not null,
    expiry_time           bigint   not null,
    principal_name        varchar(100)
);

alter table spring_session
    owner to tsr;

create unique index spring_session_ix1
    on spring_session (session_id);

create index spring_session_ix2
    on spring_session (expiry_time);

create index spring_session_ix3
    on spring_session (principal_name);

create table spring_session_attributes
(
    session_primary_id char(36)     not null
        constraint spring_session_attributes_fk
            references spring_session (primary_id)
            on delete cascade,
    attribute_name     varchar(200) not null,
    attribute_bytes    bytea        not null,
    constraint spring_session_attributes_pk
        primary key (session_primary_id, attribute_name)
);

alter table spring_session_attributes
    owner to tsr;

create table event_type
(
    event_type_id      bigint generated by default as identity
        constraint event_type_pkey
            primary key,
    event_type_name    varchar(30)                                            not null
        constraint event_type_event_name_key
            unique,
    display_name       varchar(30)                                            not null
        constraint event_type_display_name_key
            unique,
    sort_order         integer                                                not null
        constraint event_type_sort_order_key
            unique,
    created_date       timestamp with time zone default CURRENT_TIMESTAMP     not null,
    created_by         varchar(255)             default ''::character varying not null,
    last_modified_date timestamp with time zone default CURRENT_TIMESTAMP     not null,
    last_modified_by   varchar(255)             default ''::character varying not null
);

alter table event_type
    owner to tsr;

create table event
(
    event_id           bigint generated by default as identity
        constraint event_pkey
            primary key,
    event_name         varchar(255)                                       not null,
    event_type_id      bigint
        constraint event_event_type_id_fkey
            references event_type (event_type_id),
    start_date         timestamp with time zone                           not null,
    end_date           timestamp with time zone                           not null,
    created_date       timestamp with time zone default CURRENT_TIMESTAMP not null,
    created_by         varchar(255)                                       not null,
    last_modified_date timestamp with time zone default CURRENT_TIMESTAMP not null,
    last_modified_by   varchar(255)                                       not null
);

alter table event
    owner to tsr;

create table organization
(
    organization_id           bigint generated by default as identity
        constraint organization_pkey
            primary key,
    organization_name         varchar(30)                                            not null
        constraint organization_organization_name_key
            unique,
    organization_display_name varchar(30)                                            not null
        constraint organization_organization_display_name_key
            unique,
    sort_order                integer                                                not null
        constraint organization_sort_order_key
            unique,
    created_date              timestamp with time zone default CURRENT_TIMESTAMP     not null,
    created_by                varchar(255)             default ''::character varying not null,
    last_modified_date        timestamp with time zone default CURRENT_TIMESTAMP     not null,
    last_modified_by          varchar(255)             default ''::character varying not null
);

alter table organization
    owner to tsr;

create table tsr_user_organization
(
    tsr_user_id     bigint not null
        constraint tsr_user_organization_tsr_user_id_fkey
            references tsr_user (tsr_user_id)
            on update cascade on delete cascade,
    organization_id bigint not null
        constraint tsr_user_organization_organization_id_fkey
            references organization (organization_id)
            on update cascade on delete cascade,
    constraint tsr_user_organization_pkey
        primary key (tsr_user_id, organization_id)
);

alter table tsr_user_organization
    owner to tsr;

create table event_task_status
(
    status_id           bigint generated by default as identity
        constraint event_task_status_pkey
            primary key,
    status_name         varchar(30)       not null
        constraint event_task_status_status_name_key
            unique,
    status_display_name varchar(30)       not null
        constraint event_task_status_status_display_name_key
            unique,
    status_short_name   char              not null,
    sort_order          integer default 0 not null
        constraint sort_order_uq
            unique
);

alter table event_task_status
    owner to tsr;

create table event_task_category
(
    event_task_name         varchar(255)                                           not null
        constraint event_task_category_event_task_name_key
            unique,
    event_task_display_name varchar(255)                                           not null
        constraint event_task_category_event_task_display_name_key
            unique,
    created_date            timestamp with time zone default CURRENT_TIMESTAMP     not null,
    created_by              varchar(255)             default ''::character varying not null,
    last_modified_date      timestamp with time zone default CURRENT_TIMESTAMP     not null,
    last_modified_by        varchar(255)             default ''::character varying not null,
    event_task_category_id  bigint generated by default as identity
        constraint event_task_category_pkey
            primary key
);

alter table event_task_category
    owner to tsr;

create table event_task
(
    event_task_category_id bigint                                                 not null
        constraint event_task_category_id_fkey
            references event_task_category (event_task_category_id)
            on update cascade on delete cascade,
    event_id               bigint                                                 not null
        constraint event_task_event_id_fkey
            references event (event_id)
            on update cascade on delete cascade,
    suspense_date          timestamp with time zone                               not null,
    approver_id            bigint
        constraint event_task_approver_id_fkey
            references tsr_user (tsr_user_id)
            on update cascade,
    resourcer_id           bigint
        constraint event_task_resourcer_id_fkey
            references tsr_user (tsr_user_id)
            on update cascade,
    status_id              bigint                   default 0                     not null
        constraint event_task_status_id_fkey
            references event_task_status (status_id)
            on update cascade on delete set default,
    created_date           timestamp with time zone default CURRENT_TIMESTAMP     not null,
    created_by             varchar(255)             default ''::character varying not null,
    last_modified_date     timestamp with time zone default CURRENT_TIMESTAMP     not null,
    last_modified_by       varchar(255)             default ''::character varying not null,
    event_task_id          bigint generated by default as identity
        constraint event_task_pkey
            primary key,
    constraint event_task_event_uq
        unique (event_task_category_id, event_id)
);

alter table event_task
    owner to tsr;

create table event_organization
(
    event_id        bigint not null
        constraint event_organization_event_id_fkey
            references event (event_id)
            on update cascade on delete cascade,
    organization_id bigint not null
        constraint event_organization_organization_id_fkey
            references organization (organization_id)
            on update cascade on delete cascade,
    constraint event_organization_pkey
        primary key (event_id, organization_id)
);

alter table event_organization
    owner to tsr;

create table event_task_comment
(
    comment_id         bigint generated by default as identity
        constraint event_task_comment_pkey
            primary key,
    event_task_id      bigint                                                 not null
        constraint event_task_comment_event_task_id_fkey
            references event_task (event_task_id)
            on update cascade on delete cascade,
    annotation         text                                                   not null,
    created_date       timestamp with time zone default CURRENT_TIMESTAMP     not null,
    created_by         varchar(255)             default ''::character varying not null,
    last_modified_date timestamp with time zone default CURRENT_TIMESTAMP     not null,
    last_modified_by   varchar(255)             default ''::character varying not null
);

alter table event_task_comment
    owner to tsr;

-- some default values
INSERT INTO event_task_status (status_name, status_display_name, status_short_name, sort_order) VALUES ('BLOCKED', 'blocked', 'R', 1);
INSERT INTO event_task_status (status_name, status_display_name, status_short_name, sort_order) VALUES ('CREATED', 'created', 'R', 2);
INSERT INTO event_task_status (status_name, status_display_name, status_short_name, sort_order) VALUES ('AWAITING_ACTION', 'awaiting action', 'Y', 3);
INSERT INTO event_task_status (status_name, status_display_name, status_short_name, sort_order) VALUES ('IN_PROGRESS', 'in progress', 'Y', 4);
INSERT INTO event_task_status (status_name, status_display_name, status_short_name, sort_order) VALUES ('COMPLETE', 'complete', 'G', 5);

INSERT INTO organization (organization_name, organization_display_name, sort_order) VALUES ('2_75', '2/75 Ranger Regiment', 1);
INSERT INTO organization (organization_name, organization_display_name, sort_order) VALUES ('A_2_75', 'A Co, 2/75 Ranger Regiment', 2);
INSERT INTO organization (organization_name, organization_display_name, sort_order) VALUES ('B_2_75', 'B Co, 2/75 Ranger Regiment', 3);
INSERT INTO organization (organization_name, organization_display_name, sort_order) VALUES ('C_2_75', 'C Co, 2/75 Ranger Regiment', 4);
INSERT INTO organization (organization_name, organization_display_name, sort_order) VALUES ('D_2_75', 'D Co, 2/75 Ranger Regiment', 5);
INSERT INTO organization (organization_name, organization_display_name, sort_order) VALUES ('E_2_75', 'E Co, 2/75 Ranger Regiment', 6);

INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('CLASS_ONE', 'Class I - Subsistence');
INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('CLASS_TWO', 'Class II - Supplies');
INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('CLASS_THREE', 'Class III - Fuels');
INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('CLASS_FOUR', 'Class IV - Construction');
INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('CLASS_FIVE', 'Class V - Ammunition');
INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('CLASS_SEVEN', 'Class VII - Major End Items');
INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('CLASS_EIGHT', 'Class VIII - Medical');
INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('CLASS_NINE', 'Class IX - Repair Parts');
INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('CLASS_TEN', 'Class X - Other Equipment');
INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('LAND', 'Land');
INSERT INTO event_task_category (event_task_name, event_task_display_name) VALUES ('MWR', 'MWR');

INSERT INTO event_type (event_type_name, display_name, sort_order) VALUES ('FLAT_RANGE', 'flat range', 1);
INSERT INTO event_type (event_type_name, display_name, sort_order) VALUES ('MANEUVER_LFX', 'maneuver live fire exercise', 2);
INSERT INTO event_type (event_type_name, display_name, sort_order) VALUES ('MANEUVER', 'maneuver range', 3);
INSERT INTO event_type (event_type_name, display_name, sort_order) VALUES ('UNCATEGORIZED', 'other', 4);