name: Full CI/CD

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 13
        uses: actions/setup-java@v1
        with:
          java-version: 13

      - name: Build Jar
        run: ./pipeline/build.sh

      - name: Saves build artifact
        uses: actions/upload-artifact@v2
        with:
          name: tsr-jar
          path: build/libs/*.jar
  test:
    name: run tests
    runs-on: ubuntu-18.04
#    needs: build
    services:
      postgres:
        image: postgres:12.2-alpine
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/test-frontend
      - uses: ./.github/actions/test-backend
        env:
          PG_HOST: postgres
          PG_USER: tsr
          PG_DATABASE: tsr_test
          PG_PASSWORD: tsr
          PG_PORT: ${{ job.services.postgres.ports['5432'] }}
  deploy_aws:
    name: deploy to aws eb
    runs-on: ubuntu-18.04
    needs: test
    steps:
      - uses: actions/checkout@v2

      - name: download build aritifact
        uses: actions/download-artifact@v2
        with:
          name: tsr-jar
          path: pipeline/eb/tsr

      - name: Deploy to AWS EB
        uses: ./.github/actions/deploy-eb
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2
          SHA8: ${{ github.sha }}